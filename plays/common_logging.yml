---

- name: "Setup job_logs directory"
  ansible.builtin.include_tasks: plays/log-dir.yml
  when: job_logs is undefined

- name: "Collect OCP logs"
  ansible.builtin.include_tasks: dump_ocp_logs.yml

- name: "Find files to be uploaded to DCI (log,txt,html,yaml,yml,json,pcap,trace,csv)"
  ansible.builtin.find:
    paths: "{{ job_logs.path }}"
    patterns: "*.log,*.txt,*.html,*.yaml,*.yml,*.json,*.pcap,*.trace,*.csv"
  register: logs_matched
  tags: [dci]

- name: "Upload logs (text)"
  vars:
    mime_type: "text/plain"
  ansible.builtin.include_tasks: upload_logs.yml
  with_items: "{{ logs_matched.files }}"
  tags: [dci]

- name: "Find deployment JUnit files"
  ansible.builtin.find:
    paths: "{{ job_logs.path }}"
    patterns: "*.xml"
  register: logs_matched
  tags: [dci]

- name: "Upload JUnit files"
  vars:
    mime_type: "application/junit"
  ansible.builtin.include_tasks: upload_logs.yml
  with_items: "{{ logs_matched.files }}"
  tags: [dci]

- name: "Find deployment compressed files"
  ansible.builtin.find:
    paths: "{{ job_logs.path }}"
    patterns: "*.gz"
  register: logs_matched
  tags: [dci]

- name: "Upload compressed files to DCI Control Server"
  vars:
    mime_type: "application/x-gzip"
  ansible.builtin.include_tasks: upload_logs.yml
  with_items: "{{ logs_matched.files }}"
  tags: [dci]

- name: "Remove log dir"
  ansible.builtin.file:
    path: "{{ job_logs.path }}"
    state: absent
...
