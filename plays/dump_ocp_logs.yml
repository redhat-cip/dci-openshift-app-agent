---
# tnf_config is defined in cnf_cert and it may contain dci_openshift_app_ns
# If no tnf_config is provided externally, ns_list will not be generated here
- name: Obtain namespaces from tnf_config variable if exists (excepting dci_openshift_app_ns if provided)
  set_fact:
    ns_list: "{{ ns_list|default([]) + [ item.namespace ] }}"
  when:
    - tnf_config | default('') | length
    - item.namespace | default('') | length
    - item.namespace != dci_openshift_app_ns
  loop: "{{ tnf_config }}"

# This appends dci_openshift_app_ns to ns_list (which is empty if tnf_config is not
# provided externally)
- name: Append dci_openshift_app_ns to the list
  set_fact:
    ns_list: "{{ ns_list|default([]) + [ dci_openshift_app_ns ] }}"

- name: Get OCP logs from namespace
  include_role:
    name: redhatci.ocp.get_logs_from_namespace
  vars:
    glfn_dir: "{{ job_logs.path }}"
    glfn_oc: "{{ oc_tool_path }}"
  loop: "{{ ns_list }}"
  loop_control:
    loop_var: glfn_ns

- name: Get logs from OCP deployment
  environment:
    DCI_MUST_GATHER_IMAGES: '{{ dci_must_gather_images | default(["registry.redhat.io/openshift4/ose-must-gather"]) | join(" ") }}'
    MUST_GATHER_OPTS: "/usr/bin/gather since-time={{ job_info.job.created_at }}"
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin:/usr/local/bin/{% if client_tmp_dir.path is defined %}:{{ client_tmp_dir.path }}{% endif %}"
    DO_MUST_GATHER: "{{ do_must_gather | lower }}"
  shell:
    cmd: >
      timeout -v 20m
      plays/scripts/get-logs "{{ job_logs.path }}"
  ignore_errors: true

- name: "Remove the must-gather directory"
  file:
    path: "{{ job_logs.path }}/must_gather"
    state: absent
...
