---
- name: "Check if oc executable is present"
  command: "which oc"
  register: oc_result
  ignore_errors: True
  changed_when: oc_result.rc != 0

# Check which hooks are present
- name: Valid hooks
  set_fact:
    hooks_found: >-
      {% set hooks = lookup('fileglob', '{{ item }}/hooks/*.yml') -%}
      {% if ',' in hooks -%}
        {% set hooks = val.split(',')|map('trim')|list -%}
      {% elif '' in hooks -%}
        {% set hooks = [hooks] -%}
      {% else -%}
        {% set hooks = [] -%}
      {% endif -%}
      {{ hooks_found | default([]) + hooks }}
  loop: "{{ dci_config_dirs }}"

# Check if KUBECONFIG is present
- name: "Read KUBECONFIG path from env vars"
  set_fact:
    kubeconfig_path: "{{ lookup('env','KUBECONFIG') }}"
  when: kubeconfig_path is not defined

- name: "Check if KUBECONFIG exists"
  stat:
    path: "{{ kubeconfig_path }}"
  register: kubeconfig

- name: "Fail if kubeconfig NOT found"
  fail:
    msg: "kubeconfig not found at {{ kubeconfig_path }}"
  when: not kubeconfig.stat.exists

...
