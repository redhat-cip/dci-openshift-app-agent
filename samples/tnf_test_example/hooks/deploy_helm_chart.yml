---

- name: Create temporary directory
  tempfile:
    state: directory
    prefix: "dci_tnf_helm_{{ job_id | default('') }}_"
  register: tnf_test_example_helm_chart

- name: Download Helm binary
  vars:
    helm_ver: "{{ helm_version | default('3.9.0') }}"
  unarchive:
    src: https://get.helm.sh/helm-v{{ helm_ver }}-linux-amd64.tar.gz
    dest: "{{ tnf_test_example_helm_chart.path }}"
    extra_opts:
      - linux-amd64/helm
      - --strip-components=1
    remote_src: true

- name: Set helm_tool_path
  set_fact:
    helm_tool_path: "{{ tnf_test_example_helm_chart.path }}/helm"

- name: Download Helm chart file
  get_url:
    url: "{{ tnf_helm_chart_to_install.chart_url }}"
    dest: "{{ tnf_test_example_helm_chart.path }}/tnf_test_example.tgz"
    mode: 0644
  register: hc_req
  until: hc_req.changed
  retries: 3
  delay: 10

- name: Set image to be used
  vars:
    image_name: "{{ tnf_helm_chart_to_install.image_repository | regex_replace('^[^/]*/', '') }}"
  set_fact:
    image_repository: "{{ ( dci_disconnected|default(false)|bool and dci_local_registry|length ) | ternary(dci_local_registry + '/' + image_name, tnf_helm_chart_to_install.image_repository) }}"

- name: Deploy Helm chart
  kubernetes.core.helm:
    name: tnf-test-example
    chart_ref: "{{ tnf_test_example_helm_chart.path }}/tnf_test_example.tgz"
    release_namespace: "{{ target_ns }}"
    binary_path: "{{ helm_tool_path }}"
    values:
      image:
        repository: "{{ image_repository }}"

- name: Wait until Helm chart is deployed
  kubernetes.core.helm_info:
    name: tnf-test-example
    release_namespace: "{{ target_ns }}"
    binary_path: "{{ helm_tool_path }}"
  register: chart_check
  retries: 60
  delay: 5
  until:
    - "'status' in chart_check"
    - "'status' in chart_check.status"
    - "chart_check.status.status == 'deployed'"

- name: Remove temporary directory
  file:
    path: "{{ tnf_test_example_helm_chart.path }}"
    state: absent

...
