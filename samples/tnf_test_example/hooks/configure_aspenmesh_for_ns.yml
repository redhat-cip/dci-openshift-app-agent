---
# This takes the same rule from system:openshift:scc:anyuid ClusterRole, but
# using a Role instead
- name: Create a Role to allow pods running under anyuid
  kubernetes.core.k8s:
    state: present
    definition:
      kind: Role
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: use-anyuid
        namespace: "{{ app_ns }}"
      rules:
        - apiGroups: ["security.openshift.io"]
          resources: ["securitycontextconstraints"]
          resourceNames: ["anyuid"]
          verbs: ["use"]

- name: Add RoleBinding to allow pods running under anyuid
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: "use-anyuid"
        namespace: "{{ app_ns }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: use-anyuid
      subjects:
        - kind: Group
          name: system:serviceaccounts:{{ app_ns }}

- name: Create NetworkAttachmentDefinition
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: "k8s.cni.cncf.io/v1"
      kind: NetworkAttachmentDefinition
      metadata:
        name: istio-cni
        namespace: "{{ app_ns }}"

- name: Label namespace for istio-injection
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ app_ns }}"
        labels:
          istio-injection: enabled

# The aspen-mesh-pull-secret provided in istio-system namespace is required on each namespace
- name: Retrieve aspen-mesh-pull-secret from istio-system namespace
  kubernetes.core.k8s_info:
    namespace: istio-system
    kind: Secret
    name: aspen-mesh-pull-secret
  register: am_pull_secret
  no_log: true

- name: Create aspen-mesh-pull-secret in target namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: aspen-mesh-pull-secret
        namespace: "{{ app_ns }}"
      data:
        .dockerconfigjson: "{{ am_pull_secret['resources'][0]['data']['.dockerconfigjson'] }}"
      type: "kubernetes.io/dockerconfigjson"
  no_log: true

# We need to enable the traffic with istio-system and openshift-dns namespaces.
# If not, istio-proxy container will never start
- name: Create NetworkPolicies to allow required traffic for AM
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'templates/network_policies_am.yml.j2') | from_yaml }}"
