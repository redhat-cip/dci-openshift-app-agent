---
- name: Define catalog path and version
  set_fact:
    catalog_path: "{{ dci_local_registry }}/telcoci/testnetworkfunction/{{ tnf_operator_to_install.operator_name }}-disconnected-catalog"
    catalog_version: "{{ tnf_operator_to_install.operator_version }}_{{ lookup('password', '/dev/null length=16 chars=ascii_lowercase,digits') }}"

- name: Create temporary directory for mirroring catalog
  tempfile:
    state: directory
    prefix: tnf_test_example_prerun_tmp_dir.
  register: tnf_test_example_prerun_tmp_dir

- name: Copy authentication config
  copy:
    src: "{{ partner_creds }}"
    dest: "{{ tnf_test_example_prerun_tmp_dir.path }}/config.json"

- name: "Create FBC catalog"
  include_role:
    name: redhatci.ocp.fbc_catalog
    apply:
      environment:
        - DOCKER_CONFIG: "{{ tnf_test_example_prerun_tmp_dir.path }}"
  vars:
    fbc_index_image: "{{ catalog_path }}:{{ catalog_version }}"
    fbc_bundles:
      - "{{ tnf_operator_to_install.operator_bundle }}"
    fbc_opm_args: "--skip-tls-verify=false"

- name: Push catalog image to local registry and delete local image
  shell: >
    set -ex;
    podman push
    --authfile {{ pullsecret_tmp_file }}
    {{ catalog_path }}:{{ catalog_version }};
    podman rmi {{ catalog_path }}:{{ catalog_version }}

- name: Find ImageDigestMirrorSet in the cluster
  community.kubernetes.k8s_info:
    api_version: config.openshift.io/v1
    kind: ImageDigestMirrorSet
  register: idms_res

- name: Mirror generated catalog
  include_role:
    name: redhatci.ocp.mirror_catalog
  vars:
    mc_oc_tool_path: "{{ oc_tool_path }}"
    mc_catalog: "{{ catalog_path }}:{{ catalog_version }}"
    mc_registry: "{{ dci_local_registry }}"
    mc_pullsecret: "{{ pullsecret_tmp_file }}"
    mc_is_type: "{{ idms_res.resources is defined and idms_res.resources | length | ternary('idms', 'icsp') }}"

- name: Apply Image Source file
  community.kubernetes.k8s:
    definition: "{{ lookup('file', mc_is_file.path) }}"

- name: Remove temporary directory
  file:
    path: "{{ tnf_test_example_prerun_tmp_dir.path }}"
    state: absent

- name: Wait for MCP status
  include_role:
    name: redhatci.ocp.check_resource
  vars:
    resource_to_check: "MachineConfigPool"
    check_wait_retries: 60
    check_wait_delay: 60
    check_reason: "TNF test example"
    cr_oc: "{{ oc_tool_path }}"
...
