---
# First task to do: if the variables are not correctly defined, do not continue.
- name: Declare tnf variables
  include_tasks: declare_tnf_variables.yml

# Make sure that we don't have any remaining resources before starting tests, just
# in case they were not deleted properly in previous executions in the same cluster.
- name: Run cleaning tasks
  include_tasks: cleaning_tasks.yml

- name: "Install required rpm packages"
  package:
    name: "{{ item }}"
    state: present
  loop:
    - curl
    - python3-openshift
    - python3-pyyaml
  become: true

- name: Mirror images in disconnected environments
  include_role:
    name: redhatci.ocp.mirror_images
  vars:
    images:
      - quay.io/testnetworkfunction/cnf-test-partner:latest
    authfile: "{{ pullsecret_tmp_file }}"
  when:
    - dci_disconnected | default(false) | bool
    - dci_local_registry | length
    - pullsecret_tmp_file|length

# Following the same scope than in preflight for preparing the operator in disconnected environments
- name: Preparing the operator in disconnected environments
  include_tasks: prepare_operator.yml
  when:
    - tnf_operator_to_install is defined
    - dci_disconnected | default(false) | bool
    - dci_local_registry | length
    - pullsecret_tmp_file|length

# Doing it separately in case no component is provided.
- name: Preparing the Helm chart in disconnected environments
  include_tasks: prepare_helm_chart.yml
  when:
    - tnf_helm_chart_to_install is defined
    - dci_disconnected | default(false) | bool
    - dci_local_registry | length
    - pullsecret_tmp_file|length

# Retrieve default StorageClass if present in the cluster
- name: Check cluster StorageClass resources defined
  community.kubernetes.k8s_info:
    api_version: v1
    kind: StorageClass
  register: storage_classes

- name: Tasks when at least one StorageClass exists
  block:
    - name: Retrieve name of the default StorageClass
      set_fact:
        storage_class: "{{ item.metadata.name }}"
      loop: "{{ storage_classes.resources }}"
      when:
        - item.metadata.annotations is defined
        - item.metadata.annotations["storageclass.kubernetes.io/is-default-class"] is defined
        - item.metadata.annotations["storageclass.kubernetes.io/is-default-class"] | bool

    - name: Print default StorageClass
      debug:
        msg: "Default StorageClass is {{ storage_class }}"
      when:
        - storage_class is defined
  when:
    - storage_classes is defined
    - storage_classes.resources | length > 0
...
